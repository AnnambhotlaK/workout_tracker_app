import 'package:cloud_firestore/cloud_firestore.dart';
import '../models/workout.dart'; // Your Workout model
import '../models/session.dart';

class FirestoreService {
  final FirebaseFirestore _db = FirebaseFirestore.instance;

  // --- Workout Methods ---

  // CREATE: Add a new workout for a given user
  Future<void> addWorkout(String userId, Workout workout) {
    // Workout ID will be auto-generated by Firestore unless you set it
    return _db
        .collection('users')
        .doc(userId)
        .collection('workouts')
        .add(workout.toJson()); // toJson includes serverTimestamp for createdAt
  }

  // READ: Get stream of workouts for a given user
  Stream<List<Workout>> getWorkouts(String userId) {
    return _db
        .collection('users')
        .doc(userId)
        .collection('workouts')
    // .orderBy('createdAt', descending: true) // Optional: order by creation time
        .snapshots()
        .map((snapshot) =>
        snapshot.docs
            .map((doc) => Workout.fromSnapshot(doc))
            .toList());
  }

  // UPDATE: Modify an existing workout
  Future<void> updateWorkout(String userId, Workout workout) {
    var updatedData = workout.toJson();
    // Add/update an 'updatedAt' timestamp
    updatedData['updatedAt'] = FieldValue.serverTimestamp();
    return _db
        .collection('users')
        .doc(userId)
        .collection('workouts')
        .doc(workout.id)
        .update(updatedData);
  }

  // DELETE: Remove a given workout
  Future<void> deleteWorkout(String userId, String workoutId) {
    return _db
        .collection('users')
        .doc(userId)
        .collection('workouts')
        .doc(workoutId)
        .delete();
  }

  // -- Session Methods (WIP) --
}